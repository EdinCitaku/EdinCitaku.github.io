{"componentChunkName":"component---node-modules-gatsby-theme-chronoblog-src-templates-post-js","path":"/01-loading-html-file-react/","result":{"data":{"mdx":{"id":"6d62c785-548c-52e9-9d51-332e4e1f5e72","excerpt":"Recently I solved an issue in the webapp I am writing for the  Zukunftschreiben  team.\nSince it was a fairly easy fix and I didn'tâ€¦","frontmatter":{"title":"Loading html files in React","date":"2020-04-09T00:00:00.000Z","description":"A simple solution for a problem I encountered while writing a privacy policy page","tags":["blog","react","nodejs"],"cover":null},"fields":{"slug":"/01-loading-html-file-react/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Loading html files in React\",\n  \"date\": \"2020-04-09T00:00:00.000Z\",\n  \"description\": \"A simple solution for a problem I encountered while writing a privacy policy page\",\n  \"tags\": [\"blog\", \"react\", \"nodejs\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Recently I solved an issue in the webapp I am writing for the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://zukunftschreiben.org/\"\n  }, \"Zukunftschreiben\"), \" team.\\nSince it was a fairly easy fix and I didn't immediately find a solution on google, I wanted to write down what I came up with.\\nThe problem was that the webapp needed a page that explained its privacy policy. This policy was a huge html file and I did not want hard code its content as a react component.\"), mdx(\"h1\", {\n    \"id\": \"the-solution\"\n  }, \"The Solution\"), mdx(\"p\", null, \"The solution was quite simple, as it turns out there is a package named \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.npmjs.com/package/html-react-parser\"\n  }, \"html-react-parser\"), \" that can parse html as a string.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"But first I needed to get the html file as a string from my component. The backend of the webapp was written in nodejs with express, so I decided to provide an API that returns the string as a file.\"), mdx(\"p\", null, \"Here we load our file and create the function that returns the html file as a string\"), mdx(\"h6\", {\n    \"id\": \"privacypolicycontrollerjs\"\n  }, \"privacyPolicy.controller.js\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"const fs = require('fs');\\nvar text = fs.readFileSync(\\\"./resources/privacy-policy.html\\\",'utf8');\\n\\nexports.getPrivacyPolicy = function (req,res) {\\n    res.json(text)\\n}\\n\")), mdx(\"p\", null, \"Here we provide the API that returns the file as a string\"), mdx(\"h6\", {\n    \"id\": \"privacypolicyroutejs\"\n  }, \"privacyPolicy.route.js\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"module.exports = privacyPolicyRoute;\\n\\nfunction privacyPolicyRoute(){\\n    var privacyPolicyController = require('../controllers/privacyPolicy.controller');\\n\\n    var router = require('express').Router();\\n    router.get(\\\"/privacy-policy\\\", privacyPolicyController.getPrivacyPolicy)\\n    return router\\n}\\n\")), mdx(\"p\", null, \"Now its time to consume this API and display our privacy policy in our frontend.\"), mdx(\"h6\", {\n    \"id\": \"privacypolicyjs\"\n  }, \"PrivacyPolicy.js\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"class PrivacyPolicy extends Component {\\n    constructor(props){\\n        super(props)\\n        this.state = {data: '' }\\n    }\\n\\n    componentDidMount() {\\n        fetch('${BACKEND_IP}:${BACKEND_PORT}/api/privacy-policy')\\n            .then((response) => response.json())\\n            .then((data) => {\\n                        this.setState({\\n                            data: data\\n                        })\\n            })\\n    }\\n    render() {\\n        return  parse(this.state.data);\\n    }\\n}\\n\")), mdx(\"p\", null, \"And thats it! We were able to display a really long static html without having to hardcode it as a component! :)\\nI will provide a github repo soon where u can try it out yourself!\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"6d62c785-548c-52e9-9d51-332e4e1f5e72"}},"staticQueryHashes":["1961101537","2542493696"]}